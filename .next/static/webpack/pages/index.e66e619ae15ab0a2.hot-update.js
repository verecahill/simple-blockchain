"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./result/blockchain.js":
/*!******************************!*\
  !*** ./result/blockchain.js ***!
  \******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n\nvar _runtimeJs = _interopRequireDefault(__webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\"));\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nvar Block = __webpack_require__(/*! ./block */ \"./result/block.js\");\nvar BN = (__webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\").BN);\nvar Transaction = __webpack_require__(/*! ./transaction */ \"./result/transaction.js\");\nvar Validation = __webpack_require__(/*! ./validation */ \"./result/validation.js\");\n// 블록체인 설계도\nvar Blockchain = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Blockchain(blockchain) {\n        _classCallCheck(this, Blockchain);\n        // 기존 블록체인이 존재하지 않으면 제네시스 블록을 넣어서 초기화 한다\n        this.blockchain = blockchain || [\n            Block.getGenesis()\n        ];\n        this.mempool = [];\n    }\n    _createClass(Blockchain, [\n        {\n            // 트랜잭션 멤풀에 추가\n            key: \"addTx\",\n            value: function addTx(tx) {\n                this.mempool.push(tx);\n            }\n        },\n        {\n            // 블록을 블록체인에 추가\n            key: \"addBlock\",\n            value: function addBlock(block) {\n                // 유효성 검증\n                var valid = new Validation();\n                var lastBlock = this.blockchain[this.blockchain.length - 1];\n                if (valid.isValidLenght(this.blockchain, block) && valid.isValidBlock(lastBlock, block)) {\n                    this.blockchain.push(block);\n                    console.log(\"\\uCD94\\uAC00\\uB41C \\uBE14\\uB85D\", block);\n                }\n            }\n        },\n        {\n            key: \"slowResolve\",\n            value: function slowResolve() {\n                return new Promise(function(resolve) {\n                    return setTimeout(resolve.bind(), 0);\n                });\n            }\n        },\n        {\n            key: \"mining\",\n            value: // 채굴\n            function mining() {\n                var _this = this;\n                return _asyncToGenerator(_runtimeJs.default.mark(function _callee() {\n                    var transactions, lastBlock, preHash, difficulty, index, newBlock, target, newDifficulty;\n                    return _runtimeJs.default.wrap(function _callee$(_ctx) {\n                        while(1)switch(_ctx.prev = _ctx.next){\n                            case 0:\n                                transactions = _toConsumableArray(_this.mempool);\n                                // 멤풀 초기화\n                                _this.mempool = [];\n                                lastBlock = _this.blockchain[_this.blockchain.length - 1];\n                                preHash = lastBlock.hash;\n                                difficulty = lastBlock.difficulty;\n                                index = lastBlock.index;\n                                newBlock = new Block({\n                                    index: index + 1,\n                                    preHash: preHash,\n                                    timestamp: Date.now(),\n                                    transactions: transactions,\n                                    nonce: 0\n                                });\n                                target = _this.getTarget(difficulty);\n                            case 8:\n                                if (newBlock.getHash() <= target) {\n                                    _ctx.next = 14;\n                                    break;\n                                }\n                                // nonce를 단조증가 시킨다\n                                newBlock.nonce++;\n                                _ctx.next = 12;\n                                return _this.slowResolve();\n                            case 12:\n                                _ctx.next = 8;\n                                break;\n                            case 14:\n                                console.log(target);\n                                // 정답 해시 받기\n                                newBlock.hash = newBlock.getHash();\n                                newDifficulty = _this.getDifficulty(difficulty);\n                                newBlock.difficulty = newDifficulty;\n                                _this.addBlock(newBlock);\n                            case 19:\n                            case \"end\":\n                                return _ctx.stop();\n                        }\n                    }, _callee);\n                }))();\n            }\n        },\n        {\n            // 자가 제한 시스템\n            key: \"getDifficulty\",\n            value: function getDifficulty(difficulty) {\n                var lastBlock = this.blockchain[this.blockchain.length - 1]; // 라스트 블록을 구한다\n                // 라스트 블록이 제네시스 블록이 아닌 블록을 가져오고\n                // 라스트 블록 기준으로 10개씩 나눠서 들어가도록 처리 (10의 배수인값)\n                if (lastBlock.index > 0 && lastBlock.index % 10 == 0) {\n                    console.log(\"\\uB09C\\uC774\\uB3C4 \\uC870\\uC808 \\uC2DC\\uC791\");\n                    // 라스트블록 기준으로 10개 전의 블록의 타임스탬프\n                    var prevTime = this.blockchain[this.blockchain.length - 10].timestamp;\n                    // 라스트블록의 타임스탬프\n                    var lastTime = lastBlock.timestamp;\n                    // (라스트블록 타임스탬프 - 10개전의 블록 타임스탬프) / 개수 / 1000(초로 변경됨)\n                    // 평균 블록 생성 시간\n                    var avgTime = (lastTime - prevTime) / 10 / 1000; // 초\n                    // 평균시간이 20초보다 빠르면 난이도를 올려주고, 20초 보다 느리면 난이도를 낮춰준다\n                    var multiple = avgTime < 20 ? 4 : 1 / 4;\n                    // 난이도를 변경\n                    difficulty = difficulty * multiple;\n                    console.log(\"\\uBCC0\\uACBD\\uB41C \\uB09C\\uC774\\uB3C4\", difficulty);\n                }\n                return difficulty;\n            }\n        },\n        {\n            // 타겟 구하기\n            key: \"getTarget\",\n            value: function getTarget(difficulty) {\n                var HADICAP = 0x4000000;\n                var bits = this.difficultyToBits(difficulty);\n                bits = bits + HADICAP;\n                var bits16 = parseInt(\"0x\" + bits.toString(16), 16);\n                var exponent = bits16 >> 24;\n                var mantissa = bits16 & 0xffffff;\n                var target = mantissa * Math.pow(2, 8 * (exponent - 3));\n                var target16 = target.toString(16);\n                var k = Buffer.from(\"0\".repeat(64 - target16.length) + target16, \"hex\");\n                return k.toString(\"hex\");\n            }\n        },\n        {\n            // 난이도를 통해서 비트구하기\n            key: \"difficultyToBits\",\n            value: function difficultyToBits(difficulty) {\n                var maximumTarget = \"0x00000000ffff\" + \"0\".repeat(64 - 12);\n                var difficulty16 = difficulty.toString(16);\n                var target = parseInt(maximumTarget, 16) / parseInt(difficulty16, 16);\n                var num = new BN(target.toString(16), \"hex\");\n                var compact, nSize, bits;\n                nSize = num.byteLength();\n                if (nSize <= 3) {\n                    compact = num.toNumber();\n                    compact <<= 8 * (3 - nSize);\n                } else {\n                    compact = num.ushrn(8 * (nSize - 3)).toNumber();\n                }\n                if (compact & 0x800000) {\n                    compact >>= 8;\n                    nSize++;\n                }\n                bits = nSize << 24 | compact;\n                if (num.isNeg()) {\n                    bits |= 0x800000;\n                }\n                bits >>>= 0;\n                return parseInt(bits.toString(10));\n            }\n        }\n    ]);\n    return Blockchain;\n}();\n// const bc = new Blockchain();\n// while (true) {\n//   bc.mining();\n// }\nmodule.exports = Blockchain;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./result/blockchain.js\n");

/***/ })

});